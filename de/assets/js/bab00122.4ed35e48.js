"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[4163],{57945:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>i});var t=o(74848),r=o(28453);const s={title:"Local Development",sidebar_position:3,description:"Leitfaden zur lokalen Entwicklung von Autonomys Node und Farmer",slug:"/develop/auto-evm/guides/local-development",keywords:["local development","autonomys network"]},l=void 0,a={id:"develop/nova/additional-guides/local_development",title:"Local Development",description:"Leitfaden zur lokalen Entwicklung von Autonomys Node und Farmer",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/develop/nova/additional-guides/local_development.md",sourceDirName:"develop/nova/additional-guides",slug:"/develop/auto-evm/guides/local-development",permalink:"/de/develop/auto-evm/guides/local-development",draft:!1,unlisted:!1,editUrl:"https://github.com/autonomys/subspace-docs/edit/main/docs/develop/nova/additional-guides/local_development.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Local Development",sidebar_position:3,description:"Leitfaden zur lokalen Entwicklung von Autonomys Node und Farmer",slug:"/develop/auto-evm/guides/local-development",keywords:["local development","autonomys network"]},sidebar:"tutorialSidebar",previous:{title:"Hardhat",permalink:"/de/develop/auto-evm/guides/hardhat"},next:{title:"Remix IDE",permalink:"/de/develop/auto-evm/guides/remix"}},d={},i=[{value:"Setting up a local development environment",id:"setting-up-a-local-development-environment",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"setting-up-a-local-development-environment",children:"Setting up a local development environment"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"You can always set up a local network to test and deploy your smart contract!"})}),"\n",(0,t.jsx)(n.p,{children:"To establish a full local network, you need to run a local node, a Core-EVM domain, and a farmer."}),"\n",(0,t.jsxs)(n.p,{children:["Besuchen Sie zun\xe4chst die Seite ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://github.com/autonomys/subspace/releases",children:"Autonomys-Releases"})})," und laden Sie die aktuellsten Version von der Node und dem Farmer herunter."]}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.p,{children:"For each release, there are two versions:"}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"skylake: for newer processors from around 2015 and onwards"}),"\n",(0,t.jsx)(n.li,{children:"x86-64-v2: for older processors from around 2009 and some older VMs"}),"\n"]}),(0,t.jsxs)(n.p,{children:["\xc4ltere Prozessoren/VMs werden von offiziellen Releases nicht mehr unterst\xfctzt, k\xf6nnen aber bei Bedarf weiterhin ",(0,t.jsx)(n.a,{href:"https://github.com/autonomys/subspace/blob/main/docs/development.md",children:"manuell kompiliert"})," werden."]})]}),"\n",(0,t.jsx)(n.p,{children:"After downloading both files that suit your system, start a node using your preferred terminal. If you want to start an EVM domain on your local machine, you need to specify:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Your local RPC server port"}),"\n",(0,t.jsx)(n.li,{children:"Your local web-socket RPC port\nYou can do this with the following command:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./your_subspace_node_path run --dev --rpc-listen-on 127.0.0.1:9944 -- --domain-id 3 --dev --rpc-listen-on 127.0.0.1:8545\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This will create a local RPC on port ",(0,t.jsx)(n.strong,{children:"8545"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Secondly, you need to start a farmer by running the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:" ./your_subspace_farmer_path farm --reward-address [YOUR REWARD ADDRESS] path=tmp-farm,size=100M\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can specify the desired plot size, but 100M should be sufficient."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"And that\u2019s it!"})," By starting your ",(0,t.jsx)(n.strong,{children:"local node"})," and a ",(0,t.jsx)(n.strong,{children:"farmer"}),", you have your ",(0,t.jsx)(n.strong,{children:"local RPC"})," ready for testing and deploying your smart contracts! You can easily connect your ",(0,t.jsx)(n.a,{href:"https://metamask.io/",children:"MetaMask"})," account to the local development network, as well as use ",(0,t.jsx)(n.a,{href:"https://remix.ethereum.org/",children:"Remix"})," or ",(0,t.jsx)(n.a,{href:"https://book.getfoundry.sh/",children:"Foundry"})," in order to test and deploy smart contracts on a local network!"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>a});var t=o(96540);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);